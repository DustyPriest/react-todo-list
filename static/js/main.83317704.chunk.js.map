{"version":3,"sources":["Components/PageHeader.js","Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["PageHeader","toggleMode","modeState","className","style","padding","Date","toLocaleDateString","weekday","year","month","day","onClick","fontSize","display","position","right","Button","color","text","backgroundColor","defaultProps","Header","title","onAddTask","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setToggleMode","setTasks","document","body","handle","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83317704.chunk.js","sourcesContent":["import { FaMoon, FaSun } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageHeader = ({ toggleMode, modeState }) => {\r\n  return (\r\n    <div className='page-header'>\r\n      <div style={{ padding: '10px' }}>\r\n        {new Date().toLocaleDateString('en-au', {\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n        })}\r\n      </div>\r\n      {!modeState ? (\r\n        <FaSun\r\n          className='icon'\r\n          onClick={toggleMode}\r\n          style={{\r\n            fontSize: '20',\r\n            display: 'inline',\r\n            position: 'relative',\r\n            right: '10px',\r\n          }}\r\n        />\r\n      ) : (\r\n        <FaMoon\r\n          className='icon'\r\n          onClick={toggleMode}\r\n          style={{\r\n            fontSize: '20',\r\n            display: 'inline',\r\n            position: 'relative',\r\n            right: '10px',\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  toggleMode: PropTypes.func,\r\n  modeState: PropTypes.bool,\r\n};\r\n\r\nexport default PageHeader;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'darkred',\r\n  text: 'Add',\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAddTask, showAdd }) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button\r\n        onClick={onAddTask}\r\n        color='black'\r\n        text={showAdd ? 'Close' : 'Add Task'}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Daily Planner',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onAddTask: PropTypes.func,\r\n  showAdd: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: 'crimson', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        ></Task>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert('Please add task name');\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Task</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          cursor='pointer'\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from 'react';\nimport PageHeader from './Components/PageHeader';\nimport Header from './Components/Header';\nimport Tasks from './Components/Tasks';\nimport AddTask from './Components/AddTask';\nimport PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [toggleMode, setToggleMode] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 0,\n      text: 'StartUp Weekend!',\n      day: 'Sunday 28th at 9am',\n      reminder: false,\n    },\n    {\n      id: 1,\n      text: 'Sent Sophia & Adam phone number listing',\n      day: 'Monday 29th at 9am',\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: 'Practice some react?',\n      day: 'Sunday 28th at 8am',\n      reminder: false,\n    },\n  ]);\n\n  // Save task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  // change dark/light mode\n  const changeMode = () => {\n    setToggleMode(!toggleMode);\n    if (toggleMode) {\n      document.body.style.backgroundColor = '#041F35';\n      document.body.style.color = 'white';\n    } else {\n      document.body.style.backgroundColor = 'cornsilk';\n      document.body.style.color = 'black';\n    }\n  };\n\n  return (\n    <div>\n      <PageHeader toggleMode={changeMode} modeState={toggleMode} />\n      <Draggable handle='#handle'>\n        <div className='container'>\n          <hr className='rounded' id='handle'></hr>\n          <Header\n            onAddTask={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask}\n          />\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (\n            <Tasks\n              tasks={tasks}\n              onDelete={deleteTask}\n              onToggle={toggleReminder}\n            />\n          ) : (\n            <div className='backmsg'> No Tasks </div>\n          )}\n        </div>\n      </Draggable>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  toggleMode: PropTypes.func,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}