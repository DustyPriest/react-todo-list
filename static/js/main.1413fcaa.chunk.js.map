{"version":3,"sources":["Components/PageHeader.js","Components/Button.js","Components/ChangeTaskName.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/TaskList.js","Components/TaskLists.js","App.js","index.js"],"names":["PageHeader","onToggleMode","modeState","onNewList","className","style","position","left","Date","toLocaleDateString","weekday","year","month","day","positon","onClick","fontSize","right","Button","color","text","backgroundColor","defaultProps","ChangeTaskName","title","listId","onChange","onEditTaskName","useState","newTitle","setNewTitle","submitTitle","e","preventDefault","onSubmit","type","value","target","autoFocus","onBlur","marginLeft","Header","onAddTask","showAdd","editTaskName","changeTaskName","marginRight","Task","task","onDelete","onToggle","check","onDoubleClick","id","Tasks","tasks","map","AddTask","onAdd","toggleShowAddTask","setText","setDay","setCheck","alert","placeholder","checked","currentTarget","TaskList","pos","index","setPos","setTitle","toggleCheck","deleteTask","addTask","deleteTaskList","promoteZIndex","posLoaded","useRef","nodeRef","showAddTask","setShowAddTask","setEditTaskName","onDeleteList","setOnDeleteList","x","y","deltaPos","setDeltaPos","useEffect","current","document","getElementById","top","handleDeleteConfirmation","display","handle","bounds","onDrag","deltaX","deltaY","opacity","onStart","onStop","zIndex","ref","length","TaskLists","taskLists","findTaskListIndex","taskList","findIndex","tlist","App","mode","setMode","setTaskLists","body","currIds","newTaskList","Math","max","nX","nY","taskId","filter","floor","random","newTask","activeList","trimList","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1413fcaa.chunk.js","sourcesContent":["import { FaMoon, FaSun } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageHeader = ({ onToggleMode, modeState, onNewList }) => {\r\n  return (\r\n    <div className='page-header'>\r\n      <div style={{ position: 'absolute', left: '10px' }}>\r\n        {new Date().toLocaleDateString('en-au', {\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n        })}\r\n      </div>\r\n      <button\r\n        className='btn btn-scale'\r\n        style={{ positon: 'absolute' }}\r\n        onClick={() => onNewList()}\r\n      >\r\n        New List\r\n      </button>\r\n      {!modeState ? (\r\n        <FaSun\r\n          className='icon'\r\n          onClick={onToggleMode}\r\n          style={{\r\n            fontSize: '1.5em',\r\n            position: 'absolute',\r\n            right: '10px',\r\n          }}\r\n        />\r\n      ) : (\r\n        <FaMoon\r\n          className='icon'\r\n          onClick={onToggleMode}\r\n          style={{\r\n            fontSize: '20',\r\n            position: 'absolute',\r\n            right: '10px',\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  onToggleMode: PropTypes.func,\r\n  modeState: PropTypes.bool,\r\n};\r\n\r\nexport default PageHeader;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'darkred',\r\n  text: 'Add',\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaCheckSquare } from 'react-icons/fa';\r\nimport { useState } from 'react';\r\n\r\nconst ChangeTaskName = ({ title, listId, onChange, onEditTaskName }) => {\r\n  const [newTitle, setNewTitle] = useState(title);\r\n\r\n  const submitTitle = (e) => {\r\n    e.preventDefault();\r\n\r\n    onChange(listId, newTitle);\r\n    onEditTaskName();\r\n\r\n    setNewTitle('');\r\n  };\r\n\r\n  return (\r\n    <form className='task-name-form' onSubmit={submitTitle}>\r\n      <input\r\n        type='text'\r\n        value={newTitle}\r\n        onChange={(e) => setNewTitle(e.target.value)}\r\n        autoFocus\r\n        onBlur={submitTitle}\r\n      />\r\n\r\n      <button type='submit' className='icon-button'>\r\n        <FaCheckSquare\r\n          type='submit'\r\n          className='icon'\r\n          fontSize='1.1em'\r\n          style={{ marginLeft: '10px' }}\r\n        />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nChangeTaskName.propTypes = {\r\n  title: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default ChangeTaskName;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport ChangeTaskName from './ChangeTaskName';\r\n\r\nconst Header = ({\r\n  title,\r\n  listId,\r\n  onAddTask,\r\n  showAdd,\r\n  editTaskName,\r\n  onEditTaskName,\r\n  changeTaskName,\r\n}) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>\r\n        {editTaskName ? (\r\n          <ChangeTaskName\r\n            title={title}\r\n            listId={listId}\r\n            onChange={changeTaskName}\r\n            onEditTaskName={onEditTaskName}\r\n          />\r\n        ) : (\r\n          title\r\n        )}\r\n        {editTaskName ? (\r\n          ''\r\n        ) : (\r\n          <FaEdit\r\n            onClick={onEditTaskName}\r\n            className='icon'\r\n            fontSize='0.5em'\r\n            style={{ marginLeft: '10px', marginRight: '10px' }}\r\n          />\r\n        )}\r\n      </h1>\r\n      <Button\r\n        className='btn btn-scale'\r\n        onClick={onAddTask}\r\n        color='black'\r\n        text={showAdd ? 'Close' : 'Add Task'}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Tasks for Today',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onAddTask: PropTypes.func,\r\n  showAdd: PropTypes.bool,\r\n  editTaskName: PropTypes.bool,\r\n  onEditTaskName: PropTypes.func,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, listId, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.check ? 'complete' : ''}`}\r\n      onDoubleClick={() => onToggle(listId, task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          className='icon'\r\n          style={{ color: 'crimson' }}\r\n          onClick={() => onDelete(listId, task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, listId, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          listId={listId}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        ></Task>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ listId, onAdd, toggleShowAddTask }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert('Please add task name');\r\n      return;\r\n    }\r\n\r\n    onAdd(listId, { text, day, check });\r\n\r\n    setText('');\r\n    setDay('');\r\n    setCheck(false);\r\n    toggleShowAddTask();\r\n  };\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control check'>\r\n        <label>Completed</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={check}\r\n          value={check}\r\n          onChange={(e) => setCheck(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Tasks from './Tasks';\r\nimport AddTask from './AddTask';\r\nimport Draggable from 'react-draggable';\r\nimport { FaHamburger } from 'react-icons/fa';\r\n\r\nconst TaskList = ({\r\n  modeState,\r\n  listId,\r\n  pos,\r\n  title,\r\n  tasks,\r\n  index,\r\n  setPos,\r\n  setTitle,\r\n  toggleCheck,\r\n  deleteTask,\r\n  addTask,\r\n  deleteTaskList,\r\n  promoteZIndex,\r\n}) => {\r\n  const posLoaded = useRef(false);\r\n  const nodeRef = useRef(null);\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [editTaskName, setEditTaskName] = useState(false);\r\n  const [onDeleteList, setOnDeleteList] = useState(false);\r\n  const [deltaPos, setDeltaPos] = useState({ x: pos.x, y: pos.y });\r\n\r\n  useEffect(() => {\r\n    if (!posLoaded.current) {\r\n      document.getElementById(listId).style.left = `${pos.x}px`;\r\n      document.getElementById(listId).style.top = `${pos.y}px`;\r\n      posLoaded.current = true;\r\n    }\r\n  });\r\n\r\n  function handleDrag(e, pos) {\r\n    const { x, y } = deltaPos;\r\n    setDeltaPos({ x: x + pos.deltaX, y: y + pos.deltaY });\r\n    document.getElementById(listId).style.opacity = 0.9;\r\n  }\r\n\r\n  function handleStop() {\r\n    setPos(listId, deltaPos.x, deltaPos.y);\r\n    document.getElementById(listId).style.opacity = 1;\r\n    // console.log(deltaPos);\r\n  }\r\n\r\n  const handleDeleteConfirmation = () => {\r\n    if (!onDeleteList) {\r\n      document.getElementById(`${listId}-confirm`).style.display = 'flex';\r\n      // document.querySelector(\r\n      //   '.confirm-task-list-delete-backdrop'\r\n      // ).style.display = 'flex';\r\n      setOnDeleteList(!onDeleteList);\r\n    } else {\r\n      document.getElementById(`${listId}-confirm`).style.display = 'none';\r\n      // document.querySelector(\r\n      //   '.confirm-task-list-delete-backdrop'\r\n      // ).style.display = 'none';\r\n      setOnDeleteList(!onDeleteList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle='#handle'\r\n      bounds='parent'\r\n      onDrag={handleDrag}\r\n      onStart={() => promoteZIndex(listId)}\r\n      onStop={handleStop}\r\n    >\r\n      <div\r\n        id={listId}\r\n        className={`container ${modeState ? 'light' : 'dark'} `}\r\n        style={{ zIndex: `${index * 10}` }}\r\n        ref={nodeRef}\r\n        onClick={() => promoteZIndex(listId)}\r\n      >\r\n        <div\r\n          id={`${listId}-confirm`}\r\n          className='confirm-task-list-delete-backdrop'\r\n          onClick={() => handleDeleteConfirmation()}\r\n        >\r\n          <div className='confirm-task-list-delete'>\r\n            <span>Delete this list?</span>\r\n            <div className='confirmation-button-container'>\r\n              <button\r\n                className='btn btn-scale delete'\r\n                onClick={() => deleteTaskList(listId)}\r\n              >\r\n                {' '}\r\n                Delete\r\n              </button>\r\n              <button\r\n                className='btn btn-scale cancel'\r\n                onClick={() => handleDeleteConfirmation()}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='task-list-controls'>\r\n          <hr className='rounded' id='handle'></hr>\r\n          <span className='task-list-menu'>\r\n            <FaHamburger\r\n              className='icon'\r\n              onClick={() => handleDeleteConfirmation()}\r\n            />\r\n          </span>\r\n        </div>\r\n        <Header\r\n          title={title}\r\n          listId={listId}\r\n          onEditTaskName={() => setEditTaskName(!editTaskName)}\r\n          editTaskName={editTaskName}\r\n          changeTaskName={setTitle}\r\n          onAddTask={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        {showAddTask && (\r\n          <AddTask\r\n            listId={listId}\r\n            onAdd={addTask}\r\n            toggleShowAddTask={() => setShowAddTask(!showAddTask)}\r\n          />\r\n        )}\r\n        {tasks.length > 0 ? (\r\n          <Tasks\r\n            tasks={tasks}\r\n            listId={listId}\r\n            onDelete={deleteTask}\r\n            onToggle={toggleCheck}\r\n          />\r\n        ) : (\r\n          <div className='backmsg'> No Tasks </div>\r\n        )}\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import TaskList from './TaskList';\r\n\r\nconst TaskLists = ({\r\n  modeState,\r\n  taskLists,\r\n  setPos,\r\n  setTitle,\r\n  toggleCheck,\r\n  deleteTask,\r\n  addTask,\r\n  deleteTaskList,\r\n  promoteZIndex,\r\n}) => {\r\n  const findTaskListIndex = (taskList) => {\r\n    return taskLists.findIndex((tlist) => tlist.id === taskList.id);\r\n  };\r\n  return (\r\n    <>\r\n      {taskLists.map((taskList) => (\r\n        <TaskList\r\n          key={taskList.id}\r\n          modeState={modeState}\r\n          listId={taskList.id}\r\n          pos={taskList.pos}\r\n          title={taskList.title}\r\n          tasks={taskList.tasks}\r\n          setPos={setPos}\r\n          setTitle={setTitle}\r\n          toggleCheck={toggleCheck}\r\n          deleteTask={deleteTask}\r\n          addTask={addTask}\r\n          deleteTaskList={deleteTaskList}\r\n          index={findTaskListIndex(taskList)}\r\n          promoteZIndex={promoteZIndex}\r\n        >\r\n          {' '}\r\n        </TaskList>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskLists;\r\n","import { useState } from 'react';\nimport PageHeader from './Components/PageHeader';\nimport TaskLists from './Components/TaskLists';\n\nconst App = () => {\n  const [mode, setMode] = useState(false);\n  // const [listCount, setListCount] = useState(2);\n  const [taskLists, setTaskLists] = useState([\n    {\n      id: 0,\n      pos: { x: 64, y: 64 },\n      title: 'Tasks for Today',\n      tasks: [\n        {\n          id: 0,\n          text: 'StartUp Weekend!',\n          day: 'Sunday 28th at 9am',\n          check: false,\n        },\n        {\n          id: 1,\n          text: 'Sent Sophia & Adam phone number listing',\n          day: 'Monday 29th at 9am',\n          check: false,\n        },\n        {\n          id: 2,\n          text: 'Practice some react?',\n          day: 'Sunday 28th at 8am',\n          check: false,\n        },\n      ],\n    },\n    {\n      id: 1,\n      pos: { x: 696, y: 96 },\n      title: 'Tasks for Today2',\n      tasks: [\n        {\n          id: 0,\n          text: 'StartUp Weekend!',\n          day: 'Sunday 28th at 9am',\n          check: false,\n        },\n        {\n          id: 1,\n          text: 'Sent Sophia & Adam phone number listing',\n          day: 'Monday 29th at 9am',\n          check: false,\n        },\n        {\n          id: 2,\n          text: 'Practice some react?',\n          day: 'Sunday 28th at 8am',\n          check: false,\n        },\n      ],\n    },\n  ]);\n\n  // create new Task List\n  const newTaskList = () => {\n    const currIds = taskLists.map((tlist) => {\n      return tlist.id;\n    });\n    const id = Math.max(...currIds) + 1;\n\n    const newTaskList = {\n      id: id,\n      // default task list appearance\n      pos: { x: 0, y: 0 },\n      title: 'New List',\n      tasks: [\n        {\n          id: 0,\n          text: 'Make a Todo List!',\n          day: new Date().toLocaleDateString('en-au', {\n            weekday: 'short',\n            // year: 'numeric',\n            day: 'numeric',\n            month: 'short',\n          }),\n          check: false,\n        },\n      ],\n    };\n    setTaskLists([...taskLists, newTaskList]);\n  };\n\n  // delete Task List\n  const deleteTaskList = (id) => {\n    setTaskLists(taskLists.filter((tlist) => tlist.id !== id));\n  };\n\n  // set Task List z-index on interact\n  const promoteZIndex = (id) => {\n    const activeList = taskLists.filter((tlist) => tlist.id === id)[0];\n    const trimList = taskLists.filter((tlist) => tlist.id !== id);\n    setTaskLists([...trimList, activeList]);\n  };\n\n  // set Task List position\n  const setPos = (id, nX, nY) => {\n    setTaskLists(\n      taskLists.map((tlist) =>\n        tlist.id === id ? { ...tlist, pos: { x: nX, y: nY } } : tlist\n      )\n    );\n  };\n\n  // set Task List title\n  const setTitle = (id, title) => {\n    setTaskLists(\n      taskLists.map((tlist) =>\n        tlist.id === id ? { ...tlist, title: `${title}` } : tlist\n      )\n    );\n  };\n\n  // save task to list\n  const addTask = (listId, task) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = { id, ...task };\n    setTaskLists(\n      taskLists.map((tlist) =>\n        tlist.id === listId\n          ? { ...tlist, tasks: [...tlist.tasks, newTask] }\n          : tlist\n      )\n    );\n  };\n\n  // delete task from list\n  const deleteTask = (listId, taskId) => {\n    setTaskLists(\n      taskLists.map((tlist) =>\n        tlist.id === listId\n          ? {\n              ...tlist,\n              tasks: tlist.tasks.filter((task) => task.id !== taskId),\n            }\n          : tlist\n      )\n    );\n  };\n\n  // toggle task check / complete\n  const setToggleCheck = (listId, taskId) => {\n    setTaskLists(\n      taskLists.map((tlist) =>\n        tlist.id === listId\n          ? {\n              ...tlist,\n              tasks: tlist.tasks.map((task) =>\n                task.id === taskId ? { ...task, check: !task.check } : task\n              ),\n            }\n          : tlist\n      )\n    );\n  };\n\n  // change dark/light mode\n  const changeMode = () => {\n    setMode(!mode);\n    if (mode) {\n      document.body.style.backgroundColor = '#041F35';\n      document.body.style.color = 'white';\n    } else {\n      document.body.style.backgroundColor = 'cornsilk';\n      document.body.style.color = 'black';\n    }\n  };\n\n  return (\n    <div>\n      <PageHeader\n        onToggleMode={changeMode}\n        modeState={mode}\n        onNewList={newTaskList}\n      />\n      <div className='drag-container'>\n        <TaskLists\n          modeState={mode}\n          taskLists={taskLists}\n          setPos={setPos}\n          setTitle={setTitle}\n          toggleCheck={setToggleCheck}\n          deleteTask={deleteTask}\n          addTask={addTask}\n          deleteTaskList={deleteTaskList}\n          promoteZIndex={promoteZIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}